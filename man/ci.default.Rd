% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/2_ci.R, R/methods_glmmTMB.R, R/methods_lme4.R
\name{ci.default}
\alias{ci.default}
\alias{ci.glmmTMB}
\alias{ci.merMod}
\title{Confidence Intervals (CI)}
\usage{
\method{ci}{default}(x, ci = 0.95, dof = NULL, method = NULL, robust = FALSE, ...)

\method{ci}{glmmTMB}(
  x,
  ci = 0.95,
  dof = NULL,
  method = "wald",
  robust = FALSE,
  component = "all",
  verbose = TRUE,
  ...
)

\method{ci}{merMod}(x, ci = 0.95, dof = NULL, method = "wald", robust = FALSE, ...)
}
\arguments{
\item{x}{A statistical model.}

\item{ci}{Confidence Interval (CI) level. Default to \code{0.95} (\verb{95\%}).}

\item{dof}{Number of degrees of freedom to be used when calculating
confidence intervals. If \code{NULL} (default), the degrees of freedom are
retrieved by calling \code{\link[=degrees_of_freedom]{degrees_of_freedom()}} with
approximation method defined in \code{method}. If not \code{NULL}, use this argument
to override the default degrees of freedom used to compute confidence
intervals.}

\item{method}{Method for computing degrees of freedom for
confidence intervals (CI) and the related p-values. Allowed are following
options (which vary depending on the model class): \code{"residual"},
\code{"normal"}, \code{"likelihood"}, \code{"satterthwaite"}, \code{"kenward"}, \code{"wald"},
\code{"profile"}, \code{"boot"}, \code{"uniroot"}, \code{"ml1"}, \code{"betwithin"}, \code{"hdi"},
\code{"quantile"}, \code{"ci"}, \code{"eti"}, \code{"si"}, \code{"bci"}, or \code{"bcai"}. See section
\emph{Confidence intervals and approximation of degrees of freedom} in
\code{\link[=model_parameters]{model_parameters()}} for further details.}

\item{robust}{Logical, if \code{TRUE}, computes confidence intervals based on
robust standard errors. See \code{\link[=standard_error_robust]{standard_error_robust()}}.}

\item{...}{Arguments passed down to \code{\link[=standard_error_robust]{standard_error_robust()}}
when confidence intervals or p-values based on robust standard errors
should be computed.}

\item{component}{Model component for which parameters should be shown. See
the documentation for your object's class in \code{\link[=model_parameters]{model_parameters()}} for
further details.}

\item{verbose}{Toggle warnings and messages.}
}
\value{
A data frame containing the CI bounds.
}
\description{
Compute confidence intervals (CI) for frequentist models.
}
\note{
\code{ci_robust()} resp. \code{ci(robust = TRUE)} rely on the \pkg{sandwich}
or \pkg{clubSandwich} package (the latter if \code{vcov_estimation = "CR"} for
cluster-robust standard errors) and will thus only work for those models
supported by those packages.
}
\section{Confidence intervals and approximation of degrees of freedom}{

There are different ways of approximating the degrees of freedom depending
on different assumptions about the nature of the model and its sampling
distribution. The \code{ci_method} modulates the method for computing degrees
of freedom (df) that are used to calculate confidence intervals (CI) and the
related p-values. Following options are allowed, depending on the model
class:

\strong{Classical methods:}

Classical inference is generally based on the \strong{Wald method}.
The Wald approach to inference computes a test statistic by dividing the
parameter estimate by its standard error (Coefficient / SE),
then comparing this statistic against a t- or normal distribution.
This approach can be used to compute CIs and p-values.

\code{"wald"}
\itemize{
\item Applies to \emph{non-Bayesian models}
\item For \emph{linear models}, CIs computed using the Wald method (SE and a \emph{t-distribution with residual df})
\item For \emph{linear models}, p-values computed using the Wald method with a \emph{t-distribution with residual df}
\item For other models, CIs computed using the Wald method (SE and a \emph{normal distribution})
\item For other models, p-values computed using the Wald method with a \emph{normal distribution}
}

\code{"normal"}
\itemize{
\item Applies to \emph{non-Bayesian models}
\item Compute Wald CIs and p values, but always use a normal distribution
\item CIs computed using the Wald method (SE and a \emph{normal distribution})
\item p-values computed using the Wald method with a \emph{normal distribution}
}

\code{"residual"}
\itemize{
\item Applies to \emph{non-Bayesian models}
\item Compute Wald CIs and p values, but always use a \emph{t-distribution with residual df} when possible
\item CIs computed using the Wald method (SE and a \emph{t-distribution with residual df})
\item p-values computed using the Wald method with a \emph{t-distribution with residual df}
\item If the residual df for a model cannot be determined, a normal distribution is used instead
}

\strong{Methods for mixed models:}

Compared to fixed effects (or single-level) models, determining appropriate
df for Wald-based inference in mixed models is more difficult.
See \href{https://bbolker.github.io/mixedmodels-misc/glmmFAQ.html#what-are-the-p-values-listed-by-summaryglmerfit-etc.-are-they-reliable}{the R GLMM FAQ}
for a discussion.

Several approximate methods for computing df are available, but you should
also consider instead using profile likelihood (\code{"profile"}) or bootstrap ("\verb{boot"})
CIs and p-values instead.

\code{"satterthwaite"}
\itemize{
\item Applies to \emph{linear mixed models}
\item CIs computed using the Wald method (SE and a \emph{t-distribution with Satterthwaite df})
\item p-values computed using the Wald method with a \emph{t-distribution with Satterthwaite df}
}

\code{"kenward"}
\itemize{
\item Applies to \emph{linear mixed models}
\item CIs computed using the Wald method (\emph{Kenward-Roger SE} and a \emph{t-distribution with Kenward-Roger df})
\item p-values computed using the Wald method with a \emph{Kenward-Roger SE and t-distribution with Kenward-Roger df}
}

\code{"ml1"}
\itemize{
\item Applies to \emph{linear mixed models}
\item CIs computed using the Wald method (SE and a \emph{t-distribution with m-l-1 approximated df})
\item p-values computed using the Wald method with a \emph{t-distribution with m-l-1 approximated df}
\item See \code{\link[=ci_ml1]{ci_ml1()}}
}

\code{"betwithin"}
\itemize{
\item Applies to \emph{linear mixed models} and \emph{generalized linear mixed models}
\item CIs computed using the Wald method (SE and a \emph{t-distribution with between-within df})
\item p-values computed using the Wald method with a \emph{t-distribution with between-within df}
\item See \code{\link[=ci_betwithin]{ci_betwithin()}}
}

\strong{Likelihood-based methods:}

Likelihood-based inference is based on comparing the likelihood for the
maximum-likelihood estimate to the the likelihood for models with one or more
parameter values changed (e.g., set to zero or a range of alternative values).
Likelihood ratios for the maximum-likelihood and alternative models are compared
to a \eqn{\chi}-squared distribution to compute CIs and p-values.

\code{"profile"}
\itemize{
\item Applies to \emph{non-Bayesian models} of class \code{glm}, \code{polr} or \code{glmmTMB}
\item CIs computed by \emph{profiling the likelihood curve for a parameter},
using linear interpolation to find where likelihood ratio equals a critical value
\item p-values computed using the Wald method with a \emph{normal-distribution)}
(note: this might change in a future update!)
}

\code{"uniroot"}
\itemize{
\item Applies to \emph{non-Bayesian models} of class \code{glmmTMB}
\item CIs computed by \emph{profiling the likelihood curve for a parameter},
using root finding to find where likelihood ratio equals a critical value;
\item p-values computed using the Wald method with a \emph{normal-distribution)}
(note: this might change in a future update!)
}

\strong{Methods for bootstrapped or Bayesian models:}

Bootstrap-based inference is based on \strong{resampling} and refitting the model
to the resampled datasets. The distribution of parameter estimates across resampled
datasets is used to approximate the parameter's sampling distribution.
Depending on the type of model, several different methods for bootstrapping
and constructing CIs and p-values from the bootstrap distribution are available.

For Bayesian models, inference is based on drawing samples from the model posterior distribution.

\code{"quantile"}
\itemize{
\item Applies to \emph{all models (including Bayesian models)}
\item For non-Bayesian models, only applies if \code{bootstrap = TRUE}
\item CIs computed as \emph{equal tailed intervals} using the quantiles of the bootstrap or posterior samples
\item p-values are based on the \emph{probability of direction}
\item See \code{\link[bayestestR:eti]{bayestestR::eti()}}
}

\code{"eti"}
\itemize{
\item Same as \code{"quantile"}
}

\code{"hdi"}
\itemize{
\item Applies to \emph{all models (including Bayesian models)}
\item For non-Bayesian models, only applies if \code{bootstrap = TRUE}
\item CIs computed as \emph{highest density intervals} for the bootstrap or posterior samples
\item p-values are based on the \emph{probability of direction}
\item See \code{\link[bayestestR:hdi]{bayestestR::hdi()}}
}

\code{"bci"}
\itemize{
\item Applies to \emph{all models (including Bayesian models)}
\item For non-Bayesian models, only applies if \code{bootstrap = TRUE}
\item CIs computed as \emph{bias corrected and accelerated intervals} for the bootstrap or posterior samples
\item p-values are based on the \emph{probability of direction}
\item See \code{\link[bayestestR:bci]{bayestestR::bci()}}
}

\code{"bcai"}
\itemize{
\item Same as \code{"bci"}
}

\code{"si"}
\itemize{
\item Applies to \emph{Bayesian models} with proper priors
\item CIs computed as \emph{support intervals} comparing the posterior samples against the prior samples
\item p-values are based on the \emph{probability of direction}
\item See \code{\link[bayestestR:si]{bayestestR::si()}}
}

\code{"boot"}
\itemize{
\item Applies to \emph{non-Bayesian models} of class \code{merMod}
\item CIs computed using \emph{parametric bootstrapping} (simulating data from the fitted model)
\item p-values computed using the Wald method with a \emph{normal-distribution)}
(note: this might change in a future update!)
}

For all iteration-based methods other than \code{"boot"}
(\code{"hdi"}, \code{"quantile"}, \code{"ci"}, \code{"eti"}, \code{"si"}, \code{"bci"}, \code{"bcai"}),
p-values are based on the probability of direction (\code{\link[bayestestR:p_direction]{bayestestR::p_direction()}}),
which is converted into a p-value using \code{\link[bayestestR:pd_to_p]{bayestestR::pd_to_p()}}.
}

\examples{
\donttest{
library(parameters)
if (require("glmmTMB")) {
  model <- glmmTMB(
    count ~ spp + mined + (1 | site),
    ziformula = ~mined,
    family = poisson(),
    data = Salamanders
  )

  ci(model)
  ci(model, component = "zi")
}
}
}
